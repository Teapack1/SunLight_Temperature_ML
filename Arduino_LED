const int warmPin = 4; // Choose any PWM-enabled pin for Teensy 2.0
const int coldPin = 14; // Choose any PWM-enabled pin for Teensy 2.0
const int ledPin = 11;
const float step = 0.1;
float controlValue = 0;
int angle = 0;

void setup() {

    pinMode(ledPin, OUTPUT);
  pinMode(warmPin, OUTPUT);
  pinMode(coldPin, OUTPUT);
  Serial.begin(9600);

}

void loop() {

  if (Serial.available()) {
                            // Get control value from Serial port.
    controlValue = Serial.parseFloat();
    setLedBrightness(controlValue);

    digitalWrite(ledPin, HIGH);
    delay(200);
  }

  else if (Serial.available() == false) {
                             // Get control value from function.
    angle += 120;
    angle %= 360;
    float radians = angle*(PI/180);
    controlValue = (sin(radians) + 1)/2;
   // controlValue = 0;
     Serial.print("angle: ")  ;
    Serial.print(angle);

    Serial.println(controlValue);
    setLedBrightness(controlValue);
    digitalWrite(ledPin, HIGH);
    delay(1000);
    digitalWrite(ledPin, LOW);
    delay(1000);
  }
    digitalWrite(ledPin, LOW);
    //delay(200);

  Serial.print("ControlValue: ");
  Serial.println(controlValue);
}

void setLedBrightness(float controlValue) {
    int warmBrightness;
    int coldBrightness;
  // goes from 0 - 1 , there is no point of both LEDS on 100%:

  /*
     warmBrightness = (1 - controlValue) * 255;
    coldBrightness = controlValue * 255;
  */

   // on 0.5, both LEDS are on 100%:

      if (controlValue <= 0.5) {
      warmBrightness = 255;
      coldBrightness = int((controlValue * 2) * 255); // Map control value for Cold LED (0 to 0.5 -> 0 to 255)
    } else {
      warmBrightness = int((1 - (controlValue - 0.5) * 2) * 255); // Map control value for Warm LED (0.5 to 1 -> 255 to 0)
      coldBrightness = 255;
    }


    analogWrite(warmPin, warmBrightness);
    analogWrite(coldPin, coldBrightness);
    Serial.print("WarmW:");
    Serial.println(warmBrightness);
    Serial.print("ColdW:");
    Serial.println(coldBrightness);
}