#include <FreqCount.h>

// TCS3200 color sensor pins
#define S0 2
#define S1 3
#define S2 4
#define S3 5
#define sensorOut 6

int redFrequency, greenFrequency, blueFrequency, clearFrequency;

// Tuneable White LED pins
const int warmPin = 9;
const int coldPin = 10;
const int ledPin = 11;

const float step = 0.1;
float controlValue = 0;
int angle = 0;

void setup() {
  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);
  pinMode(S3, OUTPUT);

  pinMode(warmPin, OUTPUT);
  pinMode(coldPin, OUTPUT);

  digitalWrite(S0, HIGH);
  digitalWrite(S1, LOW);

  Serial.begin(9600);
}

void loop() {
/*---------------------- Get control value from Serial port.*/

  if (Serial.available()) {
    float controlValue = Serial.parseFloat();
    setLedBrightness(controlValue);
            digitalWrite(ledPin, HIGH);
    delay(200);
  }

  /*---------------------- Get control value from function. */
  /*
    else if (Serial.available() == false) {


    angle += 120;
    angle %= 360;
    float radians = angle*(PI/180);
    controlValue = (sin(radians) + 1)/2;
   // controlValue = 0;
     Serial.print("angle: ")  ;
    Serial.print(angle);

    Serial.println(controlValue);
    setLedBrightness(controlValue);
    digitalWrite(ledPin, HIGH);
    delay(500);
    digitalWrite(ledPin, LOW);
    delay(500);
  }
  */

  unsigned long red, green, blue, clear;

  // Measure red
  digitalWrite(S2, LOW);
  digitalWrite(S3, LOW);
  redFrequency = pulseIn(sensorOut, LOW);

  // Measure green
  digitalWrite(S2, HIGH);
  digitalWrite(S3, HIGH);
  greenFrequency = pulseIn(sensorOut, LOW);

  // Measure blue
  digitalWrite(S2, LOW);
  digitalWrite(S3, HIGH);
  blueFrequency = pulseIn(sensorOut, LOW);

  // Measure clear (no filter)
  digitalWrite(S2, HIGH);
  digitalWrite(S3, LOW);
  clearFrequency = pulseIn(sensorOut, LOW);

  // Send the RGBW values via serial
  Serial.print(redFrequency);
  Serial.print(",");
  Serial.print(greenFrequency);
  Serial.print(",");
  Serial.print(blueFrequency);
  Serial.print(",");
  Serial.println(clearFrequency);

  digitalWrite(ledPin, LOW);

  delay(500);
}

void setLedBrightness(float controlValue) {
    int warmBrightness;
    int coldBrightness;
/*------------------ Single white value goes from 0 - 1 , there is no point of both LEDS on 100%:*/

  /*
     warmBrightness = (1 - controlValue) * 255;
    coldBrightness = controlValue * 255;
  */
/*---------------------Single white value goes from 0 - 0.5, both LEDS are on 100% power on 0.5: */

      if (controlValue <= 0.5) {
      warmBrightness = 255;
      coldBrightness = int((controlValue * 2) * 255); // Map control value for Cold LED (0 to 0.5 -> 0 to 255)
    } else {
      warmBrightness = int((1 - (controlValue - 0.5) * 2) * 255); // Map control value for Warm LED (0.5 to 1 -> 255 to 0)
      coldBrightness = 255;
    }
}
